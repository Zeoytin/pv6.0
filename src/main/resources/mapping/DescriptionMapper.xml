<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.pv.productversion.mapper.DescriptionMapper">
    <resultMap id="BaseResultMap" type="com.pv.productversion.entity.Description">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="type" jdbcType="VARCHAR" property="type"/>
        <result column="content" jdbcType="VARCHAR" property="content"/>
        <result column="version_id" jdbcType="BIGINT" property="versionId"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, type, content, version_id
  </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from description
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from description
    where id = #{id,jdbcType=BIGINT}
  </delete>
    <insert id="insert" parameterType="com.pv.productversion.entity.Description">
    insert into description (id, type, content, 
      version_id)
    values (#{id,jdbcType=BIGINT}, #{type,jdbcType=VARCHAR}, #{content,jdbcType=VARCHAR}, 
      #{versionId,jdbcType=BIGINT})
  </insert>
    <insert id="insertSelective" parameterType="com.pv.productversion.entity.Description">
        insert into description
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="type != null">
                type,
            </if>
            <if test="content != null">
                content,
            </if>
            <if test="versionId != null">
                version_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="type != null">
                #{type,jdbcType=VARCHAR},
            </if>
            <if test="content != null">
                #{content,jdbcType=VARCHAR},
            </if>
            <if test="versionId != null">
                #{versionId,jdbcType=BIGINT},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.pv.productversion.entity.Description">
        update description
        <set>
            <if test="type != null">
                type = #{type,jdbcType=VARCHAR},
            </if>
            <if test="content != null">
                content = #{content,jdbcType=VARCHAR},
            </if>
            <if test="versionId != null">
                version_id = #{versionId,jdbcType=BIGINT},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.pv.productversion.entity.Description">
    update description
    set type = #{type,jdbcType=VARCHAR},
      content = #{content,jdbcType=VARCHAR},
      version_id = #{versionId,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
    <select id="listDescription" resultMap="BaseResultMap">
        select * from description where version_id = #{versionId}
        <if test="type != null and type !=''">
            and type LIKE CONCAT(CONCAT('%',#{type}),'%')
        </if>
        <if test="null != beginNumber and null != limit">
            LIMIT #{beginNumber},#{limit}
        </if>
    </select>
    <select id="count" resultType="java.lang.Integer">
        select count(*) from description where version_id = #{versionId}
        <if test="type != null and type !=''">
            and type LIKE CONCAT(CONCAT('%',#{type}),'%')
        </if>
    </select>
</mapper>