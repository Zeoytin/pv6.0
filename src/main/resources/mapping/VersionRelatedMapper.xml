<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.pv.productversion.mapper.VersionRelatedMapper">
    <resultMap id="BaseResultMap" type="com.pv.productversion.entity.VersionRelated">
        <id column="id" jdbcType="BIGINT" property="id" />
        <result column="version_id" jdbcType="BIGINT" property="versionId" />
        <result column="parent_id" jdbcType="BIGINT" property="parentId" />
    </resultMap>

    <resultMap id="RelatedResultMap" type="com.pv.productversion.entity.VersionRelated">
        <id column="id" jdbcType="BIGINT" property="id" />
        <result column="version_id" jdbcType="BIGINT" property="versionId" />
        <result column="parent_id" jdbcType="BIGINT" property="parentId" />
        <association property="version" javaType="com.pv.productversion.entity.Version">
            <id property="id" column="v_id"/>
            <result property="versionName" column="version_name"/>
            <result property="versionCode" column="version_code"/>
            <result column="create_time" property="createTime" />
            <result column="url" property="url" />
            <result column="file_name" property="fileName" />
        </association>
        <association property="product" javaType="com.pv.productversion.entity.Product">
            <id property="id" column="p_id"/>
            <result property="name" column="p_name"/>
            <result property="paltform" column="paltform"/>
        </association>
        <collection property="children" ofType="com.pv.productversion.entity.VersionRelated"
                    select="selectByParent" column="version_id">
        </collection>
    </resultMap>
    <sql id="Base_Column_List">
    id, version_id,parent_id
  </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from version_related
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from version_related
    where id = #{id,jdbcType=BIGINT}
  </delete>
    <insert id="insert" parameterType="com.pv.productversion.entity.VersionRelated">
    insert into version_related (id, version_id, parent_id
      )
    values (#{id,jdbcType=BIGINT}, #{versionId,jdbcType=BIGINT}, #{parentId,jdbcType=BIGINT}
      )
  </insert>
    <insert id="insertSelective" parameterType="com.pv.productversion.entity.VersionRelated">
        insert into version_related
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="versionId != null">
                version_id,
            </if>
            <if test="parentId != null">
                parent_id,
            </if>

        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="versionId != null">
                #{versionId,jdbcType=BIGINT},
            </if>
            <if test="parentId != null">
                #{parentId,jdbcType=BIGINT},
            </if>

        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.pv.productversion.entity.VersionRelated">
        update version_related
        <set>
            <if test="versionId != null">
                version_id = #{versionId,jdbcType=BIGINT},
            </if>
            <if test="parentId != null">
                parent_id = #{relatedId,jdbcType=BIGINT},
            </if>

        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.pv.productversion.entity.VersionRelated">
    update version_related
    set version_id = #{versionId,jdbcType=BIGINT},
      parent_id = #{parentId,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
    <select id="selectByCondition"  parameterType="java.lang.Long" resultType="java.util.HashMap">
      select
    vr.id as id,p.id as product_id,p.name,p.paltform,v.id as version_id,v.version_name,v.version_code,v.create_time,vr.parent_id as parentId
    from version_related as vr
     LEFT JOIN version as v ON vr.version_id = v.id
      LEFT JOIN product as p ON v.product_id = p.id
      where  vr.version_id = #{versionId}
  </select>
    <select id="treeRelated" resultMap="RelatedResultMap">
      select vr.id,vr.version_id,vr.parent_id,v.id as v_id,v.version_name,v.version_code,v.create_time,v.url,v.file_name,p.id as p_id,p.name as p_name,p.paltform
    from version_related as vr
      LEFT JOIN version as v ON vr.version_id = v.id
      LEFT JOIN product as p ON v.product_id = p.id
  </select>
    <select id="selectById" resultMap="RelatedResultMap">
      select vr.id,vr.version_id,vr.parent_id,v.id as v_id,v.version_name,v.version_code,v.create_time,v.url,v.file_name,p.id as p_id,p.name as p_name,p.paltform
      from version_related as vr
       LEFT JOIN version as v ON vr.version_id = v.id
      LEFT JOIN product as p ON v.product_id = p.id
      where vr.version_id = #{versionId}
  </select>
    <select id="selectByParent" resultMap="RelatedResultMap">
      select vr.id,vr.version_id,vr.parent_id,v.id as v_id,v.version_name,v.version_code,v.create_time,v.url,v.file_name,p.id as p_id,p.name as p_name,p.paltform
      from version_related  as vr
      LEFT JOIN version as v ON vr.version_id = v.id
      LEFT JOIN product as p ON v.product_id = p.id
      where vr.parent_id = #{parentId}
  </select>
    <select id="selectByVersionId" resultMap="RelatedResultMap">
    select vr.id,vr.version_id,vr.parent_id,v.id as v_id,v.version_name,v.version_code,v.create_time,v.url,v.file_name,p.id as p_id,p.name as p_name,p.paltform
      from version_related  as vr
      LEFT JOIN version as v ON vr.version_id = v.id
      LEFT JOIN product as p ON v.product_id = p.id
      where vr.parent_id = #{parentId}
      and version_id = #{versionId}
  </select>
    <select id="find" resultMap="BaseResultMap">
        select *
        from version_related
        where version_id = #{versionId}
    </select>

    <select id="findId" resultType="Long">
        select id
        from version_related
        where version_id = #{versionId} and parent_id = #{parentId}
    </select>
</mapper>